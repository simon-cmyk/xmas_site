{"ast":null,"code":"var _jsxFileName = \"/home/simon/Documents/xmas_site/src/pages/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = () => {\n  _s();\n  const [currentImage, setCurrentImage] = useState(1);\n  useEffect(() => {\n    // Set up a timer to change the image every 2 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image number (looping back to 1 after 12)\n      setCurrentImage(prevImage => prevImage % 12 + 1);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, [currentImage]);\n  const imagePath = require(`../../-images/${currentImage}.jpg`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath.default,\n      alt: `Slide ${currentImage}`,\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"hhlEY0XUJNFt/QlkU9xNcKtQNA0=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Slideshow","_s","currentImage","setCurrentImage","intervalId","setInterval","prevImage","clearInterval","imagePath","require","className","children","src","default","alt","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/simon/Documents/xmas_site/src/pages/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Slideshow = () => {\n  const [currentImage, setCurrentImage] = useState(1);\n\n  useEffect(() => {\n    // Set up a timer to change the image every 2 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image number (looping back to 1 after 12)\n      setCurrentImage((prevImage) => (prevImage % 12) + 1);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, [currentImage]);\n\n  const imagePath = require(`../../-images/${currentImage}.jpg`);\n\n  return (\n    <div className=\"slideshow\">\n      <img\n        src={imagePath.default}\n        alt={`Slide ${currentImage}`}\n        style={{ maxWidth: '100%', maxHeight: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default Slideshow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC;MACAF,eAAe,CAAEG,SAAS,IAAMA,SAAS,GAAG,EAAE,GAAI,CAAC,CAAC;IACtD,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,MAAMM,SAAS,GAAGC,OAAO,CAAE,iBAAgBP,YAAa,MAAK,CAAC;EAE9D,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBZ,OAAA;MACEa,GAAG,EAAEJ,SAAS,CAACK,OAAQ;MACvBC,GAAG,EAAG,SAAQZ,YAAa,EAAE;MAC7Ba,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzBID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}