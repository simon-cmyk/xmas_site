{"ast":null,"code":"var _jsxFileName = \"/home/simon/Documents/xmas_site/src/pages/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport img1 from '../../images/1.jpg';\nimport img2 from '../../images/2.jpg';\nimport img3 from '../../images/2.jpg';\nimport img4 from '../../images/2.jpg';\nimport img5 from '../../images/2.jpg';\nimport img6 from '../../images/2.jpg';\nimport img7 from '../../images/2.jpg';\nimport img8 from '../../images/2.jpg';\nimport img9 from '../../images/2.jpg';\nimport img10 from '../../images/10.jpg';\nimport img11 from '../../images/11.jpg';\nimport img12 from '../../images/12.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = () => {\n  _s();\n  const [currentImage, setCurrentImage] = useState(1);\n  useEffect(() => {\n    // Set up a timer to change the image every 3 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image number (looping back to 1 after 12)\n      setCurrentImage(prevImage => prevImage % 12 + 1);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, [currentImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `../../images/${currentImage}.jpg`,\n      alt: `Slide ${currentImage}`,\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"hhlEY0XUJNFt/QlkU9xNcKtQNA0=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","jsxDEV","_jsxDEV","Slideshow","_s","currentImage","setCurrentImage","intervalId","setInterval","prevImage","clearInterval","className","children","src","alt","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/simon/Documents/xmas_site/src/pages/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport img1 from '../../images/1.jpg'; \nimport img2 from '../../images/2.jpg'; \nimport img3 from '../../images/2.jpg'; \nimport img4 from '../../images/2.jpg'; \nimport img5 from '../../images/2.jpg'; \nimport img6 from '../../images/2.jpg'; \nimport img7 from '../../images/2.jpg'; \nimport img8 from '../../images/2.jpg'; \nimport img9 from '../../images/2.jpg'; \nimport img10 from '../../images/10.jpg'; \nimport img11 from '../../images/11.jpg'; \nimport img12 from '../../images/12.jpg'; \n\n\nconst Slideshow = () => {\n  const [currentImage, setCurrentImage] = useState(1);\n\n  useEffect(() => {\n    // Set up a timer to change the image every 3 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image number (looping back to 1 after 12)\n      setCurrentImage((prevImage) => (prevImage % 12) + 1);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, [currentImage]);\n\n  return (\n    <div className=\"slideshow\">\n      <img\n        src={`../../images/${currentImage}.jpg`}\n        alt={`Slide ${currentImage}`}\n        style={{ maxWidth: '100%', maxHeight: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default Slideshow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC;MACAF,eAAe,CAAEG,SAAS,IAAMA,SAAS,GAAG,EAAE,GAAI,CAAC,CAAC;IACtD,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBV,OAAA;MACEW,GAAG,EAAG,gBAAeR,YAAa,MAAM;MACxCS,GAAG,EAAG,SAAQT,YAAa,EAAE;MAC7BU,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}