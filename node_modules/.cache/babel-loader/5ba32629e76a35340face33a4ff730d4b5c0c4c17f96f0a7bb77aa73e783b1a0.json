{"ast":null,"code":"var _jsxFileName = \"/home/simon/Documents/xmas_site/src/pages/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport img1 from '../images/1.jpg';\nimport img2 from '../images/2.jpg';\nimport img3 from '../images/3.jpg';\nimport img4 from '../images/4.jpg';\nimport img5 from '../../images/5.jpg';\nimport img6 from '../../images/6.jpg';\nimport img7 from '../../images/7.jpg';\nimport img8 from '../../images/8.jpg';\nimport img9 from '../../images/9.jpg';\nimport img10 from '../../images/10.jpg';\nimport img11 from '../../images/11.jpg';\nimport img12 from '../../images/12.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12];\nconst Slideshow = () => {\n  _s();\n  const [currentImage, setCurrentImage] = useState(0);\n  useEffect(() => {\n    // Set up a timer to change the image every 2 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image index (looping back to 0 after 11)\n      setCurrentImage(prevImage => (prevImage + 1) % 12);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[currentImage].default,\n      alt: `Slide ${currentImage + 1}`,\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"xngy/pFJVIFcJVqnqHd1K90xRps=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","jsxDEV","_jsxDEV","images","Slideshow","_s","currentImage","setCurrentImage","intervalId","setInterval","prevImage","clearInterval","className","children","src","default","alt","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/simon/Documents/xmas_site/src/pages/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport img1 from '../images/1.jpg';\nimport img2 from '../images/2.jpg';\nimport img3 from '../images/3.jpg';\nimport img4 from '../images/4.jpg';\nimport img5 from '../../images/5.jpg';\nimport img6 from '../../images/6.jpg';\nimport img7 from '../../images/7.jpg';\nimport img8 from '../../images/8.jpg';\nimport img9 from '../../images/9.jpg';\nimport img10 from '../../images/10.jpg';\nimport img11 from '../../images/11.jpg';\nimport img12 from '../../images/12.jpg';\n\nconst images = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12];\n\nconst Slideshow = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n\n  useEffect(() => {\n    // Set up a timer to change the image every 2 seconds\n    const intervalId = setInterval(() => {\n      // Increment the current image index (looping back to 0 after 11)\n      setCurrentImage((prevImage) => (prevImage + 1) % 12);\n    }, 2000);\n\n    // Clear the interval when the component is unmounted or updated\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"slideshow\">\n      <img\n        src={images[currentImage].default}\n        alt={`Slide ${currentImage + 1}`}\n        style={{ maxWidth: '100%', maxHeight: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default Slideshow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAG,CAACd,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;AAE1F,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC;MACAF,eAAe,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC;IACtD,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBX,OAAA;MACEY,GAAG,EAAEX,MAAM,CAACG,YAAY,CAAC,CAACS,OAAQ;MAClCC,GAAG,EAAG,SAAQV,YAAY,GAAG,CAAE,EAAE;MACjCW,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvBID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}